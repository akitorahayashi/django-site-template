services:
  db:
    image: postgres:16-alpine
    env_file:
      - .env
    volumes:
      - db_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_HOST_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "5432:5432"

  web:
    image: dj-site-templ:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - static_volume:/app/static
    healthcheck:
      test: [ "CMD", "python", "-c", "import sys, urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/').getcode() == 200 else sys.exit(1)" ]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
    ports:
      - "${HOST_BIND_IP:-127.0.0.1}:${HOST_PORT:-8000}:80"
    volumes:
      - static_volume:/app/static
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/" ]
      interval: 30s
      timeout: 10s
      start_period: 10s
      retries: 3
    restart: unless-stopped

volumes:
  static_volume:
    driver: local
  db_volume:
    driver: local
